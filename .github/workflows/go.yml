# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Build
      run: go build -v ./...

    - name: Test with Coverage
      run: |
        go test -v -coverprofile=coverage.out -covermode=atomic ./...
        go tool cover -html=coverage.out -o=coverage.html

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: env.CODECOV_TOKEN != ''
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Coverage Badge
      uses: tj-actions/coverage-badge-go@v2
      if: github.ref == 'refs/heads/main'
      with:
        filename: coverage.out

    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v20
      if: github.ref == 'refs/heads/main'
      id: verify-changed-files
      with:
        files: README.md

    - name: Commit changes
      if: steps.verify-changed-files.outputs.files_changed == 'true' && github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "chore: Updated coverage badge."

    - name: Push changes
      if: steps.verify-changed-files.outputs.files_changed == 'true' && github.ref == 'refs/heads/main'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main

    - name: Generate Coverage Report
      if: github.event_name == 'pull_request'
      run: |
        echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
        go tool cover -func=coverage.out | tail -1 >> $GITHUB_STEP_SUMMARY
        
    - name: Comment PR with Coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const { execSync } = require('child_process');
            const output = execSync('go tool cover -func=coverage.out | tail -1', { encoding: 'utf8' });
            const match = output.match(/(\d+\.\d+)%/);
            const coveragePercent = match ? match[1] + '%' : 'unknown';
            
            const body = '## ðŸ“Š Coverage Report\n\nTotal coverage: **' + coveragePercent + '**\n\nGenerated by GitHub Actions on commit `' + context.sha.substring(0, 7) + '`';
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
          } catch (error) {
            console.log('Error posting coverage comment:', error.message);
          }
